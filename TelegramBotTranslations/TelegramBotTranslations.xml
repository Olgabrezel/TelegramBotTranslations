<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TelegramBotTranslations</name>
    </assembly>
    <members>
        <member name="T:TelegramBotTranslations.Exceptions.NoStringException">
            <summary>
            The <see cref="T:System.Exception"/> that is thrown when a string that's attempted to be got doesn't exist
            </summary>
        </member>
        <member name="P:TelegramBotTranslations.Exceptions.NoStringException.Key">
            <summary>
            The key of the missing string
            </summary>
        </member>
        <member name="P:TelegramBotTranslations.Exceptions.NoStringException.Language">
            <summary>
            The file name of the language in which the string was attempted to be got
            </summary>
        </member>
        <member name="T:TelegramBotTranslations.Exceptions.NoValuesException">
            <summary>
            The <see cref="T:System.Exception"/> that is thrown when a string has no value
            </summary>
        </member>
        <member name="P:TelegramBotTranslations.Exceptions.NoValuesException.Key">
            <summary>
            The key of the string that has no value
            </summary>
        </member>
        <member name="P:TelegramBotTranslations.Exceptions.NoValuesException.Language">
            <summary>
            The file name of the language in which that string was attempted to get
            </summary>
        </member>
        <member name="T:TelegramBotTranslations.Exceptions.StringFormattingException">
            <summary>
            The <see cref="T:System.Exception"/> that is thrown when a string couldn't be formatted with the given arguments
            </summary>
        </member>
        <member name="P:TelegramBotTranslations.Exceptions.StringFormattingException.Key">
            <summary>
            The Key of the string that was attempted to be formatted
            </summary>
        </member>
        <member name="P:TelegramBotTranslations.Exceptions.StringFormattingException.Language">
            <summary>
            The file name of the Language in which the string was got
            </summary>
        </member>
        <member name="P:TelegramBotTranslations.Exceptions.StringFormattingException.Arguments">
            <summary>
            The arguments that were passed and couldn't be formatted in that string.
            </summary>
        </member>
        <member name="T:TelegramBotTranslations.BotTranslationManager">
            <summary>
            The main class. Use a static <see cref="T:TelegramBotTranslations.BotTranslationManager"/> and call its functions for the translations.
            </summary>
        </member>
        <member name="M:TelegramBotTranslations.BotTranslationManager.GetLanguageBases">
            <summary>
            Get a full list of existing language bases.
            </summary>
            <returns>Returns a full list of existing language bases.</returns>
        </member>
        <member name="M:TelegramBotTranslations.BotTranslationManager.GetLanguageVariants(System.String)">
            <summary>
            Get a List of language informations, either for a certain base or for all language files.
            </summary>
            <param name="languageBase">Optional. The language base you want to get the filenames and variants for. If nothing is specified, a list of all languages' infos be returned.</param>
            <returns>A list of languages for the specified language base or for all language files.</returns>
        </member>
        <member name="M:TelegramBotTranslations.BotTranslationManager.GetLanguage(System.String)">
            <summary>
            Get a language information.
            </summary>
            <param name="fileName">The file name (without extension!) of the file you want to get</param>
            <returns>A language object containing informations about the language</returns>
        </member>
        <member name="M:TelegramBotTranslations.BotTranslationManager.GetTranslation(System.String,System.String,System.Object[])">
            <summary>
            Get the translation of a string in a certain language.
            </summary>
            <param name="key">The key of the string to get.</param>
            <param name="language">The language to get the key in.</param>
            <param name="arguments">The arguments that the string will be formatted with. Every {#} inside the string will be replaced by arguments[#]</param>
            <returns>Returns the string with the given key in the given language, formatted with the given arguments.</returns>
        </member>
        <member name="M:TelegramBotTranslations.BotTranslationManager.GetRawString(System.String,System.String)">
            <summary>
            Get the translation of a string in a certain language without formatting.
            </summary>
            <param name="key">The key of the string to get.</param>
            <param name="language">The language to get the key in.</param>
            <returns>Returns the raw, unformatted string with the given key in the given language.</returns>
        </member>
        <member name="M:TelegramBotTranslations.BotTranslationManager.#ctor(System.String,System.String,System.String,System.String,TelegramBotTranslations.Models.ParseMode,System.Boolean)">
            <summary>
            Create a new manager for translations.
            </summary>
            <param name="botToken">The token of your telegram bot. It's required to download the files that are supposed to be uploaded. See https://core.telegram.org/bots/api#getfile for more information.</param>
            <param name="filesPath">The path to save the used files to. Must be an existing directory the program has read and write access to.</param>
            <param name="tempPath">The path to save the temporary files to. Must be an existing directory the program has read and write access to.</param>
            <param name="masterFileName">Name of the master file (without file extension!). If a string is missing or cannot be formatted in a translation, the corresponding string from the master file will be used instead, and when uploading a language, it's validated against the current master file.</param>
            <param name="parsemode">The parse mode that your bot sends messages with. Methods that return strings for your bot to send will give the strings in this parse mode.</param>
            <param name="strictErrors">Whether files with errors such as missing strings or wrong {#}s are forbidden to be uploaded. (Changes the behavior of <code>CanUpload</code> in the <see cref="M:TelegramBotTranslations.BotTranslationManager.PrepareUploadLanguage(System.String,System.String,System.Boolean@)"/> method)</param>
        </member>
        <member name="M:TelegramBotTranslations.BotTranslationManager.ReloadLanguages">
            <summary>
            Update the language files from the directory. Can be called after manual changes to the directory, doesn't need to be called after uploading a file through the <see cref="M:TelegramBotTranslations.BotTranslationManager.PrepareUploadLanguage(System.String,System.String,System.Boolean@)"/> and <see cref="M:TelegramBotTranslations.BotTranslationManager.UploadLanguage(System.String)"/> methods.
            </summary>
        </member>
        <member name="M:TelegramBotTranslations.BotTranslationManager.PrepareUploadLanguage(System.String,System.String,System.Boolean@)">
            <summary>
            Downloads the file to the temporary language folder and validates it against the current master file.
            </summary>
            <param name="FileId">The file_id of the file that should be uploaded.</param>
            <param name="FileName">The file_name of the file that should be uploaded.</param>
            <param name="CanUpload">Whether the file can be uploaded like this or not. If strictErrors is enabled, it's only true if there are no errors, else it's true if there are no fatal errors.</param>
            <returns>Returns a string with the validation results, the given parse mode will be applied to it.</returns>
        </member>
        <member name="M:TelegramBotTranslations.BotTranslationManager.UploadLanguage(System.String)">
            <summary>
            Move a language to the folder and use it. The language must have been prepared with <see cref="M:TelegramBotTranslations.BotTranslationManager.PrepareUploadLanguage(System.String,System.String,System.Boolean@)"/> before.
            </summary>
            <param name="fileName">The language to be uploaded.</param>
            <returns>Returns a message about the status of the uploading, in the given parse mode.</returns>
        </member>
        <member name="M:TelegramBotTranslations.BotTranslationManager.ValidateLanguage(System.String)">
            <summary>
            Validate an already existing language file.
            </summary>
            <param name="language">The language file to be validated.</param>
            <returns>Returns the validation results in the given parse mode.</returns>
        </member>
        <member name="T:TelegramBotTranslations.Models.Language">
            <summary>
            Represents a language file
            </summary>
        </member>
        <member name="P:TelegramBotTranslations.Models.Language.Base">
            <summary>
            The language's base as in the XML file
            </summary>
        </member>
        <member name="P:TelegramBotTranslations.Models.Language.Variant">
            <summary>
            The language's variant as in the XML file
            </summary>
        </member>
        <member name="P:TelegramBotTranslations.Models.Language.FileName">
            <summary>
            The file name of the XML file
            </summary>
        </member>
        <member name="P:TelegramBotTranslations.Models.Language.LangCode">
            <summary>
            The language's IETF code
            </summary>
        </member>
        <member name="T:TelegramBotTranslations.Models.ParseMode">
            <summary>
            The ParseMode that you use for sending messages
            </summary>
        </member>
        <member name="F:TelegramBotTranslations.Models.ParseMode.Default">
            <summary>
            No parse mode at all
            </summary>
        </member>
        <member name="F:TelegramBotTranslations.Models.ParseMode.Markdown">
            <summary>
            ParseMode "markdown" or "MarkdownV2"
            </summary>
        </member>
        <member name="F:TelegramBotTranslations.Models.ParseMode.Html">
            <summary>
            ParseMode "html"
            </summary>
        </member>
    </members>
</doc>
